/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Token, TokenInterface } from "../../contracts/Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenuri",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
    ],
    name: "TokenURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenURI_",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200246738038062002467833981810160405281019062000037919062000705565b83838381600390816200004b919062000a2b565b5080600490816200005d919062000a2b565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000d55760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000cc919062000b23565b60405180910390fd5b620000e6816200014f60201b60201c565b50620000f984866200021560201b60201c565b80600690816200010a919062000a2b565b507f5bb111c9b2ad41c6cc1754cdbee2cc303b7becb89d29d2d5f91165fcc0b0a49d816040516200013c919062000b92565b60405180910390a1505050505062000c8b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200028a5760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040162000281919062000b23565b60405180910390fd5b6200029e60008383620002a260201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603620002f8578060026000828254620002eb919062000be5565b92505081905550620003ce565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101562000387578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016200037e9392919062000c31565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000419578060026000828254039250508190555062000466565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620004c5919062000c6e565b60405180910390a3505050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b620004fb81620004e6565b81146200050757600080fd5b50565b6000815190506200051b81620004f0565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200054e8262000521565b9050919050565b620005608162000541565b81146200056c57600080fd5b50565b600081519050620005808162000555565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620005db8262000590565b810181811067ffffffffffffffff82111715620005fd57620005fc620005a1565b5b80604052505050565b600062000612620004d2565b9050620006208282620005d0565b919050565b600067ffffffffffffffff821115620006435762000642620005a1565b5b6200064e8262000590565b9050602081019050919050565b60005b838110156200067b5780820151818401526020810190506200065e565b60008484015250505050565b60006200069e620006988462000625565b62000606565b905082815260208101848484011115620006bd57620006bc6200058b565b5b620006ca8482856200065b565b509392505050565b600082601f830112620006ea57620006e962000586565b5b8151620006fc84826020860162000687565b91505092915050565b600080600080600060a08688031215620007245762000723620004dc565b5b600062000734888289016200050a565b955050602062000747888289016200056f565b945050604086015167ffffffffffffffff8111156200076b576200076a620004e1565b5b6200077988828901620006d2565b935050606086015167ffffffffffffffff8111156200079d576200079c620004e1565b5b620007ab88828901620006d2565b925050608086015167ffffffffffffffff811115620007cf57620007ce620004e1565b5b620007dd88828901620006d2565b9150509295509295909350565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200083d57607f821691505b602082108103620008535762000852620007f5565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620008bd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200087e565b620008c986836200087e565b95508019841693508086168417925050509392505050565b6000819050919050565b60006200090c620009066200090084620004e6565b620008e1565b620004e6565b9050919050565b6000819050919050565b6200092883620008eb565b62000940620009378262000913565b8484546200088b565b825550505050565b600090565b6200095762000948565b620009648184846200091d565b505050565b5b818110156200098c57620009806000826200094d565b6001810190506200096a565b5050565b601f821115620009db57620009a58162000859565b620009b0846200086e565b81016020851015620009c0578190505b620009d8620009cf856200086e565b83018262000969565b50505b505050565b600082821c905092915050565b600062000a0060001984600802620009e0565b1980831691505092915050565b600062000a1b8383620009ed565b9150826002028217905092915050565b62000a3682620007ea565b67ffffffffffffffff81111562000a525762000a51620005a1565b5b62000a5e825462000824565b62000a6b82828562000990565b600060209050601f83116001811462000aa3576000841562000a8e578287015190505b62000a9a858262000a0d565b86555062000b0a565b601f19841662000ab38662000859565b60005b8281101562000add5784890151825560018201915060208501945060208101905062000ab6565b8683101562000afd578489015162000af9601f891682620009ed565b8355505b6001600288020188555050505b505050505050565b62000b1d8162000541565b82525050565b600060208201905062000b3a600083018462000b12565b92915050565b600082825260208201905092915050565b600062000b5e82620007ea565b62000b6a818562000b40565b935062000b7c8185602086016200065b565b62000b878162000590565b840191505092915050565b6000602082019050818103600083015262000bae818462000b51565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000bf282620004e6565b915062000bff83620004e6565b925082820190508082111562000c1a5762000c1962000bb6565b5b92915050565b62000c2b81620004e6565b82525050565b600060608201905062000c48600083018662000b12565b62000c57602083018562000c20565b62000c66604083018462000c20565b949350505050565b600060208201905062000c85600083018462000c20565b92915050565b6117cc8062000c9b6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a9059cbb11610066578063a9059cbb1461028b578063dd62ed3e146102bb578063e0df5b6f146102eb578063f2fde38b1461030757610100565b806370a0823114610215578063715018a6146102455780638da5cb5b1461024f57806395d89b411461026d57610100565b8063313ce567116100d3578063313ce567146101a15780633c130d90146101bf57806340c10f19146101dd57806342966c68146101f957610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d610323565b60405161011a9190610fe8565b60405180910390f35b61013d600480360381019061013891906110b2565b6103b5565b60405161014a919061110d565b60405180910390f35b61015b6103d8565b6040516101689190611137565b60405180910390f35b61018b60048036038101906101869190611152565b6103e2565b604051610198919061110d565b60405180910390f35b6101a9610411565b6040516101b691906111c1565b60405180910390f35b6101c761041a565b6040516101d49190610fe8565b60405180910390f35b6101f760048036038101906101f291906110b2565b6104ac565b005b610213600480360381019061020e91906111dc565b6104c2565b005b61022f600480360381019061022a9190611209565b6104cf565b60405161023c9190611137565b60405180910390f35b61024d610517565b005b61025761052b565b6040516102649190611245565b60405180910390f35b610275610555565b6040516102829190610fe8565b60405180910390f35b6102a560048036038101906102a091906110b2565b6105e7565b6040516102b2919061110d565b60405180910390f35b6102d560048036038101906102d09190611260565b61060a565b6040516102e29190611137565b60405180910390f35b610305600480360381019061030091906113d5565b610691565b005b610321600480360381019061031c9190611209565b6106e3565b005b6060600380546103329061144d565b80601f016020809104026020016040519081016040528092919081815260200182805461035e9061144d565b80156103ab5780601f10610380576101008083540402835291602001916103ab565b820191906000526020600020905b81548152906001019060200180831161038e57829003601f168201915b5050505050905090565b6000806103c0610769565b90506103cd818585610771565b600191505092915050565b6000600254905090565b6000806103ed610769565b90506103fa858285610783565b610405858585610817565b60019150509392505050565b60006012905090565b6060600680546104299061144d565b80601f01602080910402602001604051908101604052809291908181526020018280546104559061144d565b80156104a25780601f10610477576101008083540402835291602001916104a2565b820191906000526020600020905b81548152906001019060200180831161048557829003601f168201915b5050505050905090565b6104b461090b565b6104be8282610992565b5050565b6104cc3382610a14565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61051f61090b565b6105296000610a96565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546105649061144d565b80601f01602080910402602001604051908101604052809291908181526020018280546105909061144d565b80156105dd5780601f106105b2576101008083540402835291602001916105dd565b820191906000526020600020905b8154815290600101906020018083116105c057829003601f168201915b5050505050905090565b6000806105f2610769565b90506105ff818585610817565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61069961090b565b80600690816106a8919061162a565b507f5bb111c9b2ad41c6cc1754cdbee2cc303b7becb89d29d2d5f91165fcc0b0a49d816040516106d89190610fe8565b60405180910390a150565b6106eb61090b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361075d5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107549190611245565b60405180910390fd5b61076681610a96565b50565b600033905090565b61077e8383836001610b5c565b505050565b600061078f848461060a565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108115781811015610801578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016107f8939291906116fc565b60405180910390fd5b61081084848484036000610b5c565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108895760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016108809190611245565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108fb5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108f29190611245565b60405180910390fd5b610906838383610d33565b505050565b610913610769565b73ffffffffffffffffffffffffffffffffffffffff1661093161052b565b73ffffffffffffffffffffffffffffffffffffffff161461099057610954610769565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109879190611245565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a045760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016109fb9190611245565b60405180910390fd5b610a1060008383610d33565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a865760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610a7d9190611245565b60405180910390fd5b610a9282600083610d33565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610bce5760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610bc59190611245565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c405760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610c379190611245565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610d2d578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610d249190611137565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d85578060026000828254610d799190611762565b92505081905550610e58565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610e11578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610e08939291906116fc565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ea15780600260008282540392505081905550610eee565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f4b9190611137565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f92578082015181840152602081019050610f77565b60008484015250505050565b6000601f19601f8301169050919050565b6000610fba82610f58565b610fc48185610f63565b9350610fd4818560208601610f74565b610fdd81610f9e565b840191505092915050565b600060208201905081810360008301526110028184610faf565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110498261101e565b9050919050565b6110598161103e565b811461106457600080fd5b50565b60008135905061107681611050565b92915050565b6000819050919050565b61108f8161107c565b811461109a57600080fd5b50565b6000813590506110ac81611086565b92915050565b600080604083850312156110c9576110c8611014565b5b60006110d785828601611067565b92505060206110e88582860161109d565b9150509250929050565b60008115159050919050565b611107816110f2565b82525050565b600060208201905061112260008301846110fe565b92915050565b6111318161107c565b82525050565b600060208201905061114c6000830184611128565b92915050565b60008060006060848603121561116b5761116a611014565b5b600061117986828701611067565b935050602061118a86828701611067565b925050604061119b8682870161109d565b9150509250925092565b600060ff82169050919050565b6111bb816111a5565b82525050565b60006020820190506111d660008301846111b2565b92915050565b6000602082840312156111f2576111f1611014565b5b60006112008482850161109d565b91505092915050565b60006020828403121561121f5761121e611014565b5b600061122d84828501611067565b91505092915050565b61123f8161103e565b82525050565b600060208201905061125a6000830184611236565b92915050565b6000806040838503121561127757611276611014565b5b600061128585828601611067565b925050602061129685828601611067565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6112e282610f9e565b810181811067ffffffffffffffff82111715611301576113006112aa565b5b80604052505050565b600061131461100a565b905061132082826112d9565b919050565b600067ffffffffffffffff8211156113405761133f6112aa565b5b61134982610f9e565b9050602081019050919050565b82818337600083830152505050565b600061137861137384611325565b61130a565b905082815260208101848484011115611394576113936112a5565b5b61139f848285611356565b509392505050565b600082601f8301126113bc576113bb6112a0565b5b81356113cc848260208601611365565b91505092915050565b6000602082840312156113eb576113ea611014565b5b600082013567ffffffffffffffff81111561140957611408611019565b5b611415848285016113a7565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061146557607f821691505b6020821081036114785761147761141e565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026114e07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826114a3565b6114ea86836114a3565b95508019841693508086168417925050509392505050565b6000819050919050565b600061152761152261151d8461107c565b611502565b61107c565b9050919050565b6000819050919050565b6115418361150c565b61155561154d8261152e565b8484546114b0565b825550505050565b600090565b61156a61155d565b611575818484611538565b505050565b5b818110156115995761158e600082611562565b60018101905061157b565b5050565b601f8211156115de576115af8161147e565b6115b884611493565b810160208510156115c7578190505b6115db6115d385611493565b83018261157a565b50505b505050565b600082821c905092915050565b6000611601600019846008026115e3565b1980831691505092915050565b600061161a83836115f0565b9150826002028217905092915050565b61163382610f58565b67ffffffffffffffff81111561164c5761164b6112aa565b5b611656825461144d565b61166182828561159d565b600060209050601f8311600181146116945760008415611682578287015190505b61168c858261160e565b8655506116f4565b601f1984166116a28661147e565b60005b828110156116ca578489015182556001820191506020850194506020810190506116a5565b868310156116e757848901516116e3601f8916826115f0565b8355505b6001600288020188555050505b505050505050565b60006060820190506117116000830186611236565b61171e6020830185611128565b61172b6040830184611128565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061176d8261107c565b91506117788361107c565b92508282019050808211156117905761178f611733565b5b9291505056fea2646970667358221220542ef8d21330fd02ec05c4d5df669e414e39d21964767a082018dddaa5108ffa64736f6c63430008180033";

type TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Token__factory extends ContractFactory {
  constructor(...args: TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialSupply: BigNumberish,
    owner: AddressLike,
    tokenName: string,
    tokenSymbol: string,
    tokenuri: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      initialSupply,
      owner,
      tokenName,
      tokenSymbol,
      tokenuri,
      overrides || {}
    );
  }
  override deploy(
    initialSupply: BigNumberish,
    owner: AddressLike,
    tokenName: string,
    tokenSymbol: string,
    tokenuri: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      initialSupply,
      owner,
      tokenName,
      tokenSymbol,
      tokenuri,
      overrides || {}
    ) as Promise<
      Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Token__factory {
    return super.connect(runner) as Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new Interface(_abi) as TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Token {
    return new Contract(address, _abi, runner) as unknown as Token;
  }
}
